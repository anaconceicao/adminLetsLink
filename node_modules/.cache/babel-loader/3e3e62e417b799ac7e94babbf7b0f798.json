{"ast":null,"code":"import _slicedToArray from \"/home/matheus/\\xC1rea de Trabalho/Diretorio de Projetos/Teste/lets-link-front-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/matheus/\\xC1rea de Trabalho/Diretorio de Projetos/Teste/lets-link-front-react/src/views/ListaDeUsuarios/ListaDeUsuarios.js\";\nimport React, { useState, useEffect } from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport axios from 'axios';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport api from '../../api';\nvar styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  }\n};\nvar useStyles = makeStyles(styles);\nexport default function ListaDeUsuarios() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoaded = _useState4[0],\n      setIsLoaded = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setDatas = _useState6[1];\n\n  var _useState7 = useState(Date.now()),\n      _useState8 = _slicedToArray(_useState7, 2),\n      startDateInit = _useState8[0],\n      setDateInit = _useState8[1];\n\n  var _useState9 = useState(Date.now()),\n      _useState10 = _slicedToArray(_useState9, 2),\n      startDateEnd = _useState10[0],\n      setDateEnd = _useState10[1];\n\n  var classes = useStyles(); // useEffect(() => {\n  //   // const response = api.get('getAllUsers');\n  //   axios.get(`${api}getAllUsers`)\n  //     .then(res => {\n  //       const dat = res.data;\n  //       setDatas(dat);\n  //     })\n  //   // setDatas(response.data);\n  // }, [])\n\n  useEffect(function () {\n    // GET request using fetch inside useEffect React hook\n    fetch(\"http://api-dev.letslink.digital/api/admin/getAllUsers\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return setDatas(data);\n    });\n  }, []);\n\n  function handleChangeInit(date) {\n    setDateInit(date);\n  }\n\n  ;\n\n  function handleChangeEnd(date) {\n    setDateEnd(date);\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    selected: startDateInit,\n    onChange: handleChangeInit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DatePicker, {\n    selected: startDateEnd,\n    onChange: handleChangeEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    plain: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    plain: true,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Lista de Usu\\xE1rios\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategoryWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Filtre por tipo de usu\\xE1rio e localiza\\xE7\\xE3o.\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    tableHeaderColor: \"primary\",\n    tableHead: [\"ID\", \"Nome\", \"Tipo De Perfil\", \"Cidade\", \"Estado\", \"Quantidade de Links\"] // tableData={[\n    //   [\"149ye9ee9ee\", \"Teste\", \"2\", \"teste\", \"teste\", \"2\"],\n    // ]}\n    ,\n    tableData: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/home/matheus/√Årea de Trabalho/Diretorio de Projetos/Teste/lets-link-front-react/src/views/ListaDeUsuarios/ListaDeUsuarios.js"],"names":["React","useState","useEffect","makeStyles","GridItem","GridContainer","Table","Card","CardHeader","CardBody","axios","DatePicker","api","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","lineHeight","useStyles","ListaDeUsuarios","error","setError","isLoaded","setIsLoaded","data","setDatas","Date","now","startDateInit","setDateInit","startDateEnd","setDateEnd","classes","fetch","then","response","json","handleChangeInit","date","handleChangeEnd"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CACA;;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,OAAO,4CAAP;AAEA,OAAOC,GAAP,MAAgB,WAAhB;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,iBAAiB,EAAE;AACjB,iCAA6B;AAC3BC,MAAAA,KAAK,EAAE,uBADoB;AAE3BC,MAAAA,MAAM,EAAE,GAFmB;AAG3BC,MAAAA,QAAQ,EAAE,MAHiB;AAI3BC,MAAAA,SAAS,EAAE,GAJgB;AAK3BC,MAAAA,YAAY,EAAE;AALa,KADZ;AAQjB,+BAA2B;AACzBJ,MAAAA,KAAK,EAAE;AADkB;AARV,GADN;AAabK,EAAAA,cAAc,EAAE;AACdL,IAAAA,KAAK,EAAE,SADO;AAEdG,IAAAA,SAAS,EAAE,KAFG;AAGdG,IAAAA,SAAS,EAAE,MAHG;AAIdC,IAAAA,UAAU,EAAE,KAJE;AAKdC,IAAAA,UAAU,EAAE,4CALE;AAMdJ,IAAAA,YAAY,EAAE,KANA;AAOdK,IAAAA,cAAc,EAAE,MAPF;AAQd,eAAW;AACTT,MAAAA,KAAK,EAAE,MADE;AAETE,MAAAA,QAAQ,EAAE,KAFD;AAGTK,MAAAA,UAAU,EAAE,KAHH;AAITG,MAAAA,UAAU,EAAE;AAJH;AARG;AAbH,CAAf;AA8BA,IAAMC,SAAS,GAAGvB,UAAU,CAACU,MAAD,CAA5B;AAEA,eAAe,SAASc,eAAT,GAA2B;AAAA,kBACd1B,QAAQ,CAAC,IAAD,CADM;AAAA;AAAA,MACjC2B,KADiC;AAAA,MAC1BC,QAD0B;;AAAA,mBAER5B,QAAQ,CAAC,KAAD,CAFA;AAAA;AAAA,MAEjC6B,QAFiC;AAAA,MAEvBC,WAFuB;;AAAA,mBAGf9B,QAAQ,CAAC,EAAD,CAHO;AAAA;AAAA,MAGjC+B,IAHiC;AAAA,MAG3BC,QAH2B;;AAAA,mBAIHhC,QAAQ,CAACiC,IAAI,CAACC,GAAL,EAAD,CAJL;AAAA;AAAA,MAIjCC,aAJiC;AAAA,MAIlBC,WAJkB;;AAAA,mBAKLpC,QAAQ,CAACiC,IAAI,CAACC,GAAL,EAAD,CALH;AAAA;AAAA,MAKjCG,YALiC;AAAA,MAKnBC,UALmB;;AAMxC,MAAMC,OAAO,GAAGd,SAAS,EAAzB,CANwC,CASxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAxB,EAAAA,SAAS,CAAC,YAAM;AACd;AACAuC,IAAAA,KAAK,yDAAL,CACGC,IADH,CACQ,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADhB,EAEGF,IAFH,CAEQ,UAAAV,IAAI;AAAA,aAAIC,QAAQ,CAACD,IAAD,CAAZ;AAAA,KAFZ;AAGD,GALQ,EAKN,EALM,CAAT;;AAOA,WAASa,gBAAT,CAA0BC,IAA1B,EAAgC;AAC9BT,IAAAA,WAAW,CAACS,IAAD,CAAX;AACD;;AAAA;;AACD,WAASC,eAAT,CAAyBD,IAAzB,EAA+B;AAC7BP,IAAAA,UAAU,CAACO,IAAD,CAAV;AACD;;AAAA;AAED,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAEV,aADZ;AAEE,IAAA,QAAQ,EAAES,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAEP,YADZ;AAEE,IAAA,QAAQ,EAAES,eAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAWE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,MAAjB;AAAkB,IAAA,KAAK,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAEP,OAAO,CAACpB,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAIE;AAAG,IAAA,SAAS,EAAEoB,OAAO,CAAC1B,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAJF,CADF,eASE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,gBAAgB,EAAC,SADnB;AAEE,IAAA,SAAS,EAAE,CAAC,IAAD,EAAO,MAAP,EAAe,gBAAf,EAAiC,QAAjC,EAA2C,QAA3C,EAAqD,qBAArD,CAFb,CAGE;AACA;AAEA;AANF;AAOE,IAAA,SAAS,EAAEkB,IAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,CADF,CAXF,CADF;AAqCD","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport axios from 'axios';\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport api from '../../api';\n\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  }\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function ListaDeUsuarios() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [data, setDatas] = useState([]);\n  const [startDateInit, setDateInit] = useState(Date.now());\n  const [startDateEnd, setDateEnd] = useState(Date.now());\n  const classes = useStyles();\n\n\n  // useEffect(() => {\n  //   // const response = api.get('getAllUsers');\n  //   axios.get(`${api}getAllUsers`)\n  //     .then(res => {\n  //       const dat = res.data;\n  //       setDatas(dat);\n  //     })\n  //   // setDatas(response.data);\n  // }, [])\n\n  useEffect(() => {\n    // GET request using fetch inside useEffect React hook\n    fetch(`http://api-dev.letslink.digital/api/admin/getAllUsers`)\n      .then(response => response.json())\n      .then(data => setDatas(data));\n  }, []);\n\n  function handleChangeInit(date) {\n    setDateInit(date)\n  };\n  function handleChangeEnd(date) {\n    setDateEnd(date)\n  };\n\n  return (\n    <GridContainer>\n      <DatePicker\n        selected={startDateInit}\n        onChange={handleChangeInit}\n      />\n\n      <DatePicker\n        selected={startDateEnd}\n        onChange={handleChangeEnd}\n      />\n\n      <GridItem xs={12} sm={12} md={12}>\n        <Card plain>\n          <CardHeader plain color=\"primary\">\n            <h4 className={classes.cardTitleWhite}>\n              Lista de Usu√°rios\n            </h4>\n            <p className={classes.cardCategoryWhite}>\n              Filtre por tipo de usu√°rio e localiza√ß√£o.\n            </p>\n          </CardHeader>\n          <CardBody>\n            <Table\n              tableHeaderColor=\"primary\"\n              tableHead={[\"ID\", \"Nome\", \"Tipo De Perfil\", \"Cidade\", \"Estado\", \"Quantidade de Links\"]}\n              // tableData={[\n              //   [\"149ye9ee9ee\", \"Teste\", \"2\", \"teste\", \"teste\", \"2\"],\n\n              // ]}\n              tableData={data}\n            />\n          </CardBody>\n        </Card>\n      </GridItem>\n    </GridContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}